# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  # azureSubscription: 'f4c842d7-f8e6-495c-9fcd-3c5977d54882'
  azureSubscription: '6781832e-09ea-4f98-931d-b1e54b515876'

  # Web app name
  webAppName: 'csperando-blog-rest'

  # Environment name
  environmentName: 'csperando-blog-rest'

  # Agent VM image name
  # vmImageName: 'windows-latest'
  vmImageName: 'ubuntu-latest'


stages:
- stage: Build
  displayName: Build stage
  
  variables:
  - group: blog-rest-env
  
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
      displayName: 'npm install'

    - script: |
        npm rebuild bcrypt --build-from-source
      displayName: 'bcrypt bug fix'
    
    - script: |
        npm run build
      displayName: 'npm build'

    # - script: |
    #     npm run test
    #   displayName: 'npm test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: csperando-blog-rest'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run start'
              